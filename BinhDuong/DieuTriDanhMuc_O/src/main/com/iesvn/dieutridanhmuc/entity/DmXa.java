package com.iesvn.dieutridanhmuc.entity;

// Generated Aug 3, 2011 2:01:45 PM by Hibernate Tools 3.2.4.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * DmXa generated by hbm2java
 */
@Entity
@org.hibernate.annotations.Proxy(lazy = false)
@Table(name = "DM_XA", catalog = "DB_YTDT_BD", uniqueConstraints = @UniqueConstraint(columnNames = "DMXA_MA"))
public class DmXa implements java.io.Serializable {

	private Integer dmxaMaso;
	private DmHuyen dmHuyen;
	private String dmxaMa;
	private String dmxaTen;
	private Boolean dmxaDefa;
	private Double dmxaNgaygiocn;
	private Boolean dmxaChon;
	private Set<DmDonVi> dmDonVis = new HashSet<DmDonVi>(0);
	private Set<DmThon> dmThons = new HashSet<DmThon>(0);
	private Set<DmThon> dmThons_1 = new HashSet<DmThon>(0);
	private Set<DmDonVi> dmDonVis_1 = new HashSet<DmDonVi>(0);

	public DmXa() {
	}

	public DmXa(DmHuyen dmHuyen, String dmxaMa, String dmxaTen) {
		this.dmHuyen = dmHuyen;
		this.dmxaMa = dmxaMa;
		this.dmxaTen = dmxaTen;
	}

	public DmXa(DmHuyen dmHuyen, String dmxaMa, String dmxaTen,
			Boolean dmxaDefa, Double dmxaNgaygiocn, Boolean dmxaChon,
			Set<DmDonVi> dmDonVis, Set<DmThon> dmThons, Set<DmThon> dmThons_1,
			Set<DmDonVi> dmDonVis_1) {
		this.dmHuyen = dmHuyen;
		this.dmxaMa = dmxaMa;
		this.dmxaTen = dmxaTen;
		this.dmxaDefa = dmxaDefa;
		this.dmxaNgaygiocn = dmxaNgaygiocn;
		this.dmxaChon = dmxaChon;
		this.dmDonVis = dmDonVis;
		this.dmThons = dmThons;
		this.dmThons_1 = dmThons_1;
		this.dmDonVis_1 = dmDonVis_1;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "DM_XA")
	@SequenceGenerator(name = "DM_XA", sequenceName = "DM_XA_DMXA_MASO_SEQ", allocationSize = 1)
	@Column(name = "DMXA_MASO", unique = true, nullable = false)
	public Integer getDmxaMaso() {
		return this.dmxaMaso;
	}

	public void setDmxaMaso(Integer dmxaMaso) {
		this.dmxaMaso = dmxaMaso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DMHUYEN_MASO", nullable = false)
	@NotNull
	public DmHuyen getDmHuyen() {
		return this.dmHuyen;
	}

	public void setDmHuyen(DmHuyen dmHuyen) {
		this.dmHuyen = dmHuyen;
	}

	@Column(name = "DMXA_MA", unique = true, nullable = false, length = 9)
	@NotNull
	@Length(max = 9)
	public String getDmxaMa() {
		return this.dmxaMa;
	}

	public void setDmxaMa(String dmxaMa) {
		this.dmxaMa = dmxaMa;
	}

	@Column(name = "DMXA_TEN", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getDmxaTen() {
		return this.dmxaTen;
	}

	public void setDmxaTen(String dmxaTen) {
		this.dmxaTen = dmxaTen;
	}

	@Column(name = "DMXA_DEFA")
	public Boolean getDmxaDefa() {
		return this.dmxaDefa;
	}

	public void setDmxaDefa(Boolean dmxaDefa) {
		this.dmxaDefa = dmxaDefa;
	}

	@Column(name = "DMXA_NGAYGIOCN", precision = 22, scale = 0)
	public Double getDmxaNgaygiocn() {
		return this.dmxaNgaygiocn;
	}

	public void setDmxaNgaygiocn(Double dmxaNgaygiocn) {
		this.dmxaNgaygiocn = dmxaNgaygiocn;
	}

	@Column(name = "DMXA_CHON")
	public Boolean getDmxaChon() {
		return this.dmxaChon;
	}

	public void setDmxaChon(Boolean dmxaChon) {
		this.dmxaChon = dmxaChon;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "dmXa")
	public Set<DmDonVi> getDmDonVis() {
		return this.dmDonVis;
	}

	public void setDmDonVis(Set<DmDonVi> dmDonVis) {
		this.dmDonVis = dmDonVis;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "dmXa")
	public Set<DmThon> getDmThons() {
		return this.dmThons;
	}

	public void setDmThons(Set<DmThon> dmThons) {
		this.dmThons = dmThons;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "dmXa")
	public Set<DmThon> getDmThons_1() {
		return this.dmThons_1;
	}

	public void setDmThons_1(Set<DmThon> dmThons_1) {
		this.dmThons_1 = dmThons_1;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "dmXa")
	public Set<DmDonVi> getDmDonVis_1() {
		return this.dmDonVis_1;
	}

	public void setDmDonVis_1(Set<DmDonVi> dmDonVis_1) {
		this.dmDonVis_1 = dmDonVis_1;
	}

}

package com.iesvn.dieutridanhmuc.entity;

// Generated Aug 3, 2011 2:01:45 PM by Hibernate Tools 3.2.4.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * DtDmBanKhamSequence generated by hbm2java
 */
@Entity
@org.hibernate.annotations.Proxy(lazy = false)
@Table(name = "DT_DM_BAN_KHAM_SEQUENCE", catalog = "DB_YTDT_BD")
public class DtDmBanKhamSequence implements java.io.Serializable {

	private Integer id;
	private String ma;
	private Integer currentValue;
	private Integer currentNext;
	private Short step;

	public DtDmBanKhamSequence() {
	}

	public DtDmBanKhamSequence(String ma) {
		this.ma = ma;
	}

	public DtDmBanKhamSequence(String ma, Integer currentValue,
			Integer currentNext, Short step) {
		this.ma = ma;
		this.currentValue = currentValue;
		this.currentNext = currentNext;
		this.step = step;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "DT_DM_BAN_KHAM_SEQUENCE")
	@SequenceGenerator(name = "DT_DM_BAN_KHAM_SEQUENCE", sequenceName = "DT_DM_BAN_KHAM_SEQUENCE_ID_SEQ", allocationSize = 1)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "MA", nullable = false, length = 10)
	@NotNull
	@Length(max = 10)
	public String getMa() {
		return this.ma;
	}

	public void setMa(String ma) {
		this.ma = ma;
	}

	@Column(name = "CURRENT_VALUE")
	public Integer getCurrentValue() {
		return this.currentValue;
	}

	public void setCurrentValue(Integer currentValue) {
		this.currentValue = currentValue;
	}

	@Column(name = "CURRENT_NEXT")
	public Integer getCurrentNext() {
		return this.currentNext;
	}

	public void setCurrentNext(Integer currentNext) {
		this.currentNext = currentNext;
	}

	@Column(name = "STEP")
	public Short getStep() {
		return this.step;
	}

	public void setStep(Short step) {
		this.step = step;
	}

}
